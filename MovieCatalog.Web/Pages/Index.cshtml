@page
@using MovieCatalogApi.Entities;
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<nav class="text-center mb-2">
    <div class="m-2 border">@Model.Titles.Results.Count results.</div>
    @if (Model.Titles.Results.Count > 0)
    {
        <ul class="pagination row g-0" style="font-size: 0.8em">
            @{
                var last = 0;
            }
            @foreach (var i in Model.PageNumberOptions)
            {
                if (last != i - 1)
                {
                    <li class="page-item col g-0">
                        <i class="page-link text-muted">...</i>
                    </li>
                }
                last = i;
                <li class="page-item col @(i == Model.PageNumber ? "active font-weight-bold" : "")">
                    <a class="page-link" asp-all-route-data="Request.Query.ToDictionary(v => v.Key, v => v.Value.ToString())"
                       asp-route-PageNumber="@i">
                        @i
                    </a>
                </li>
            }
        </ul>
    }
    <div class="row">
        <div class="col">
            <form method="get">
                <label asp-for="@Model.PageSize">Page size</label>
                <select asp-for="@Model.PageSize" asp-items="Model.PageSizeOptions" class="form-control" onchange="$(this).parent().submit()"></select>
                   
                @foreach (var (key, value) in Request.Query
                .Where(q => q.Key != nameof(Model.PageSize) && q.Key != nameof(Model.PageNumber)))
                {
                    <input type="hidden" name="@key" value="@value" />
                }
                <input type="hidden" asp-for="PageNumber" value="1" />
            </form>
        </div>
        <div class="col">
            <form method="get">
                <label asp-for="@Model.TitleSort">Ordered by</label>
                <select asp-for="@Model.TitleSort" asp-items="Model.TitleSortOptions" class="form-control" onchange="$(this).parent().submit()"></select>
                
                @foreach (var (key, value) in Request.Query
                .Where(q => q.Key != nameof(Model.TitleSort) && q.Key != nameof(Model.PageNumber)))
                {
                    <input type="hidden" name="@key" value="@value" />
                }
                <input type="hidden" asp-for="PageNumber" value="1" />
            </form>
        </div>
        <div class="col">
            <form method="get">
                <label asp-for="@Model.SortDescending">Order direction</label>
                <select asp-for="@Model.SortDescending" asp-items="@Model.SortDirectionOptions" class="form-control" onchange="$(this).parent().submit()"></select>
                
                @foreach (var (key, value) in Request.Query
                .Where(q => q.Key != nameof(Model.SortDescending) && q.Key !=
                nameof(Model.PageNumber)))
                {
                    <input type="hidden" name="@key" value="@value" />
                }
                <input type="hidden" asp-for="PageNumber" value="1" />
            </form>
        </div>
    </div>
</nav>


<div class="row">

    <!----
    <div class="col-md-4 col-12  text-center" style="font-size: 1.2em">
        <div>
            @foreach (var genre in Model.Genres)
            {
                <span class="genre-item" title="Number of titles: ">
                    @genre.Key.Name (@genre.Value)
                </span>
            
            }
        </div>
        <hr class="d-block d-md-none" />
    </div>
    --> 
    <div class="col">
    ﻿<form method="get" class="row mt-3">
        <div class="col-12 mb-3 pb-3 border-bottom text-center">
            <label asp-for="Filter.Genres" class="fw-bold">Genres</label>
            <div>
                    @foreach (var genre in @Model.Genres)
                    {
                        <div class="form-check form-check-inline">
                            <input @(Model.Filter.Genres?.Any(t => t.ToString() == @genre.Key.Name) ?? false ? "checked" : string.Empty)
                                   id="Filter.Genres[@genre.Key.Name]" type="checkbox" name="Filter.Genres" value="@genre.Key.Name"
                                   class="form-check-input" />
                            <label class="form-check-label" for="Filter.Genres[@genre.Key.Name]">@genre.Key.Name (@genre.Value)</label>
                        </div>
                    }
            </div>
        </div>
        <div class="col-12 mb-3 pb-3 border-bottom text-center">
            <label asp-for="Filter.TitleContains" class="fw-bold">Title</label>
            <div class="row justify-content-center">
                <div class="col-8">
                    <input asp-for="Filter.TitleContains" class="form-control" />
                </div>
            </div>
        </div>
        <div class="col-12 mb-3 pb-3 border-bottom text-center">
            <label asp-for="Filter.TitleTypes" class="fw-bold">Type</label>
            <div>
                @foreach (var tn in Enum.GetNames(typeof(TitleType)))
                {
                    <div class="form-check form-check-inline">
                        <input @(Model.Filter.TitleTypes?.Any(t => t.ToString() == tn) ?? false ? "checked" : string.Empty)
                               id="Filter.TitleTypes[@tn]" type="checkbox" name="Filter.TitleTypes" value="@tn"
                               class="form-check-input" />
                        <label class="form-check-label" for="Filter.TitleTypes[@tn]">@tn</label>
                    </div>
                }
            </div>
        </div>
        <div class="col-12 mb-3 pb-3 border-bottom">
            <label asp-for="Filter.StartYearMin" class="fw-bold">Year of release</label>
            <div class="row justify-content-center">
                <div class="col-auto">
                    <input asp-for="Filter.StartYearMin" class="form-control" min="1900" max="2100" />
                </div>
                <div class="col-auto text-center">-</div>
                <div class="col-auto">
                    <input asp-for="Filter.StartYearMax" class="form-control" min="1900" max="2100" />
                </div>
            </div>
        </div>
        <div class="col-12 mb-3 pb-3 border-bottom">
            <label asp-for="Filter.EndYearMin" class="fw-bold">Year of finale (serials only)</label>
            <div class="row justify-content-center">
                <div class="col-auto">
                    <input asp-for="Filter.EndYearMin" class="form-control" min="1900" max="2100" />
                </div>
                <div class="col-auto text-center">-</div>
                <div class="col-auto">
                    <input asp-for="Filter.EndYearMax" class="form-control" min="1900" max="2100" />
                </div>
            </div>
        </div>
        <div class="col-12 mb-3 pb-3 border-bottom">
            <label asp-for="Filter.EndYearMin" class="fw-bold">Runtime (minutes)</label>
            <div class="row justify-content-center">
                <div class="col-auto">
                    <input asp-for="Filter.RuntimeMinutesMin" class="form-control" min="1" max="9999" />
                </div>
                <div class="col-auto text-center">-</div>
                <div class="col-auto">
                    <input asp-for="Filter.RuntimeMinutesMax" class="form-control" min="1" max="999" />
                </div>
            </div>
        </div>
        @foreach (var (key, value) in Request.Query
        .Where(kv => !kv.Key.StartsWith("Filter.")))
        {
            <input type="hidden" name="@key" value="@value" />
        }
        <div class=" row">
            <button type="submit" class="btn btn-primary fw-bold">Filter titles</button>
        </div>
    </form>

    </div>

    <div class="col-md-8 col-12">
        <div class="row">
            @foreach (var title in Model.Titles.Results)
            {
                <div class="col-6 col-lg-4">
                    <div class="card">
                        <div class="card-body">
                            <a href="/Title/@title.Id">
                                <h5>
                                    <text>@title.PrimaryTitle</text>
                                    (<small>
                                        @if (title.EndYear == null)
                                       { <text> @title.StartYear</text>
                                       }
                                       else {
                                           <text>@title.StartYear - @title.EndYear </text>
                                       }
                                    </small>)
                                </h5>
                            </a>
                            @if (title.OriginalTitle != title.PrimaryTitle)
                            {
                                <h6 class="text-muted"><i><text>@title.OriginalTitle</text></i></h6>
                            }
                            <span class="badge rounded-pill bg-primary text-nowrap">
                                @title.TitleType
                            </span>
                            @foreach (var genre in title.TitleGenres)
                            {
                                <span class="badge rounded-pill bg-secondary text-nowrap" href="/"><text>@genre.Genre.Name</text></span>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <a class="btn btn-primary" href="/Title" role="button">New Title</a>
</div>